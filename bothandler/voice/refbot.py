"""@ ü·¥è Ä·¥Ö_·¥Ñ·¥è·¥Ö·¥á
 ú·¥õ·¥õ·¥òs://·¥õ.·¥ç·¥á/ ü·¥è Ä·¥Ö_·¥Ñ·¥è·¥Ö·¥á"""

import random, time, re, asyncio
from datetime import timedelta
import datetime
from langdetect import detect
from aiogram import Bot, Dispatcher, executor, types, md
from LiteSQL import lsql
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils.markdown import hlink
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import os, config
import keyboards as kb
from ping3 import ping, verbose_ping
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton




bot = Bot('1808197957:AAEAH2esf1qCS5wLOM4fF0eicWd55ujJlfU', parse_mode='html')

dp = Dispatcher(bot, storage=MemoryStorage())

ADMINS = [816209498]

settings = {
	'ref1st': 0.5,
	'ref2st': 0.3,
	'ref3st': 0.1,
	'ref4st': 0.1,
	'ref5st': 0.1,
	'ref6st': 0.1,
	'ref7st': 0.1,
	'ref8st': 0.1,
	'ref9st': 0.1,
	'ref10st': 0.1}

sql = lsql("refbot")

try:
    a = sql.select_data("1", "id")
except:
    sql.create("id, outbalance, name, bhivebalance, fc, ref, regDate, deposit, payout, fetuses, menu, ban, refCount, ref2Count, ref3Count, ref4Count, ref5Count, ref6Count, ref7Count, ref8Count, ref9Count, ref10Count, wb_profits, nott, prize, spinsToday, data, last_bonus")
    sql.insert_data([(0, 0.0, '0', 0.0, 0, 0, '0', 0.0, 0.0, 0, 'main', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '0', '0')], 28)
list_of_user = sql.get_all_data()


async def new_user(user, username, date):
    if user not in list_of_user:
        sql.insert_data([(int(user), 0.0, f'{username}', 0.0, 0, 0, f'{date}', 0.0, 0.0, 0, 'main', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '0', '0')], 28)
        list_of_user.append(user)


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
	try:
		us = sql.select_data(message.from_user.id, "id")[0]
	except:
		username = message.from_user.username
		await new_user(message.from_user.id, username, message.date)
		try:
			ref = message.text.split()[1]
			reffer = sql.select_data(ref, 'id')[0]
			reff = sql.select_data(reffer2[5], 'id')[0]
			reffer3 = sql.select_data(reff[0], 'id')[0]
			slq.edit_data('id', reffer[0], 'outbalance', (reffer[1]+settings.ref1st))
			sql.edit_data('id', reffer[0], 'refCount', (reffer[12]+1))
			await bot.send_message(reffer.id, f'üîî –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ {(hlink("—Ä–µ—Ñ–µ—Ä–∞–ª–∞", "tg://user?id={message.from_user.id}"))} 1 —É—Ä–æ–≤–Ω—è –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {settings.ref1st}')
			sql.edit_data('id', reff[0], 'outbalance', reff[2]+settings.ref2st)
			sql.edit_data('id', reffer2[0], 'ref2Count', (reffer2[12]+1))
			await bot.send_message(reffer2[5], f"üí∏ –£ –í–∞—Å –Ω–æ–≤—ã–π {(hlink('—Ä–µ—Ñ–µ—Ä–∞–ª', 'tg://user?id={message.from_user.id}'))} –Ω–∞ 2 —É—Ä–æ–≤–Ω–µ –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {settings.ref2st}")
			bonus3 = sql.select_data(reffer3[5], 'id')[0]
			sql.edit_data('id', bonus3[0], 'outbalance', bonus3[1]+settings.ref3st)
			sql.edit_data('id', reffer3[0], 'ref3Count', reffer3[12]+1)
			await bot.send_message(reffer3[5], f"üí∏ –£ –í–∞—Å –Ω–æ–≤—ã–π {(hlink('—Ä–µ—Ñ–µ—Ä–∞–ª', 'tg://user?id={message.from_user.id}'))} –Ω–∞ 3 —É—Ä–æ–≤–Ω–µ –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {settings.ref3st}")
		
			reffer4 = sql.select_data(bonus3[0], 'id')[0]
			bonus4 = sql.select_data(reffer4[5], 'id')[0]
			sql.edit_data('id', bonus4[0], 'outbalance', bonus4[1]+settings.ref4st)
			sql.edit_data('id', reffer4[0], 'ref4Count', reffer4[12]+1)
			bot.send_message(reffer4[5], f"üí∏ –£ –í–∞—Å –Ω–æ–≤—ã–π {(hlink('—Ä–µ—Ñ–µ—Ä–∞–ª', 'tg://user?id={message.from_user.id}'))} –Ω–∞ 4 —É—Ä–æ–≤–Ω–µ –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {settings.ref4st}")
		
			reffer5 = sql.select_data(bonus4[0], 'id')[0]
			bonus5 = sql.select_data(reffer5[5], 'id')[0]
			sql.edit_data('id', bonus5[0], 'outbalance', bonus5[1]+settings.ref5st)
			sql.edit_data('id', reffer5[0], 'ref5Count', reffer5[12]+1)
			await bot.send_message(reffer5[5], f"üí∏ –£ –í–∞—Å –Ω–æ–≤—ã–π {(hlink('—Ä–µ—Ñ–µ—Ä–∞–ª', 'tg://user?id={message.from_user.id}'))} –Ω–∞ 5 —É—Ä–æ–≤–Ω–µ –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {settings.ref5st}")
		
			reffer6 = sql.select_data(bonus5[0], 'id')[0]
			bonus6 = sql.select_data(reffer6[5], 'id')[0]
			sql.edit_data('id', bonus6[0], 'outbalance', bonus6[1]+settings.ref6st)
			sql.edit_data('id', reffer6[0], 'ref6Count', reffer6[12]+1)
			await bot.send_message(reffer6[5], f"üí∏ –£ –í–∞—Å –Ω–æ–≤—ã–π {(hlink('—Ä–µ—Ñ–µ—Ä–∞–ª', 'tg://user?id={message.from_user.id}'))} –Ω–∞ 6 —É—Ä–æ–≤–Ω–µ –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {settings.ref6st}")
		
			reffer7 = sql.select_data(bonus6[0], 'id')[0]
			bonus7 = sql.select_data(reffer7[5], 'id')[0]
			sql.edit_data('id', bonus7[0], 'outbalance', bonus7[1]+settings.ref7st)
			sql.edit_data('id', reffer7[0], 'ref7Count', reffer7[12]+1)
			await bot.send_message(reffer7[5], f"üí∏ –£ –í–∞—Å –Ω–æ–≤—ã–π {(hlink('—Ä–µ—Ñ–µ—Ä–∞–ª', 'tg://user?id={message.from_user.id}'))} –Ω–∞ 7 —É—Ä–æ–≤–Ω–µ –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {settings.ref7st}")
		
			reffer8 = sql.select_data(bonus7[0], 'id')[0]
			bonus8 = sql.select_data(reffer8[5], 'id')[0]
			sql.edit_data('id', bonus8[0], 'outbalance', bonus8[1]+settings.ref8st)
			sql.edit_data('id', reffer8[0], 'ref8Count', reffer8[12]+1)
			await bot.send_message(reffer8[5], f"üí∏ –£ –í–∞—Å –Ω–æ–≤—ã–π {(hlink('—Ä–µ—Ñ–µ—Ä–∞–ª', 'tg://user?id={message.from_user.id}'))} –Ω–∞ 8 —É—Ä–æ–≤–Ω–µ –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {settings.ref8st}")
		
			reffer9 = sql.select_data(bonus8[0], 'id')[0]
			bonus9 = sql.select_data(reffer9[5], 'id')[0]
			sql.edit_data('id', bonus9[0], 'outbalance', bonus9[1]+settings.ref9st)
			sql.edit_data('id', reffer9[0], 'ref9Count', reffer9[12]+1)
			await bot.send_message(reffer9[5], f"üí∏ –£ –í–∞—Å –Ω–æ–≤—ã–π {(hlink('—Ä–µ—Ñ–µ—Ä–∞–ª', 'tg://user?id={message.from_user.id}'))} –Ω–∞ 9 —É—Ä–æ–≤–Ω–µ –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {settings.ref9st}")
		
			reffer10 = sql.select_data(bonus9[0], 'id')[0]
			bonus10 = sql.select_data(reffer10[5], 'id')[0]
			sql.edit_data('id', bonus10[0], 'outbalance', bonus10[1]+settings.ref10st)
			sql.edit_data('id', reffer10[0], 'ref10Count', reffer10[12]+1)
			await bot.send_message(reffer10[5], f"üí∏ –£ –í–∞—Å –Ω–æ–≤—ã–π {(hlink('—Ä–µ—Ñ–µ—Ä–∞–ª', 'tg://user?id={message.from_user.id}'))} –Ω–∞ 10 —É—Ä–æ–≤–Ω–µ –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {settings.ref10st}")
		except:
			ahajgxhdhshshshshddhshahshshsywysshsusys=1
	uid = message.from_user.id
	us = sql.select_data(message.from_user.id, 'id')[0]
	CHAT_LIST = [-1001424856456, -1001342223740, -1001182837702, -1001214551467]
	suka = [(await bot.get_chat_member(i, uid)).status for i in CHAT_LIST]
	print(suka)
	if "left" in suka:
		print('srabotalo')
		sub = InlineKeyboardButton('–ù–æ–≤–æ—Å—Ç–∏', url='t.me/lordref_news')
		sub2 = InlineKeyboardButton('–ß–∞—Ç', url='t.me/lordref_chat')
		sub3 = InlineKeyboardButton('–í—ã–ø–ª–∞—Ç—ã', url='t.me/lordrefs')
		sub4 = InlineKeyboardButton('–°–ø–æ–Ω—Å–æ—Ä', url='t.me/lordpromo')
		sub_kb = InlineKeyboardMarkup().add(sub, sub2, sub3, sub4)
		await message.answer('‚ùï <b>–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã:</b>', reply_markup=sub_kb)
		print('complete "left proverka')
	else:
		if us[11] == 1:
			print('us[11]')
			return
		if us[2] == '0' or us[2] != message.from_user.username:
			sql.edit_data('id', message.from_user.id, 'name', message.from_user.username)
			print('us[2] srabotalo')
			return
		if message.from_user.id in ADMINS:
			print('ADMINS srabotalo')
			admin_kb = types.ReplyKeyboardMarkup()
			adm_btn = types.KeyboardButton(text='üÖ∞Ô∏è–¥–º–∏–Ω–∫–∞', resizable=False)
			admin_kb.add(n_1, n_2, n_3, n_4, n_5, n_6, adm_btn)
			await message.answer('–ü—Ä–∏–≤–µ—Ç, —Ç—ã –∞–¥–º–∏–Ω.', reply_markup=admin_kb)
		else:
			print('else')
			await message.answer('‚úåÔ∏è <b>–ü—Ä–∏–≤–µ—Ç, ${message.from_user.first_name}</b>\n10-—Ç–∏ —É—Ä–æ–≤–Ω–µ–≤–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞üí´\nüìù –¶–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞:\n‚îú‚îÄ–ü—Ä–∏–≥–ª–∞—à–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ü§ò\n‚îú‚îÄ–ü–æ–ª—É—á–∞–µ–º –¥–æ—Ö–æ–¥ –æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ üßô‚Äç‚ôÇ \n‚îî‚îÄ–í—ã–≤–æ–¥–∏–ºüí∞ \nüåÉ –ß–∞—Ç ‚Üí @lordref_chat\nüí´ –í—ã–ø–ª–∞—Ç—ã ‚Üí  @lordrefs\nüí° –ù–æ–≤–æ—Å—Ç–∏ ‚Üí @lordref_news\n‚ùï <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ –æ—Ç 10‚ÇΩ</b>', reply_markup=main_kb)
			print('else')


@dp.message_handler(content_types=['text'])
async def msg(message: types.Message):
#	try:
#		us = sql.select_data(message.from_user.id, "id")[0]
#	except:
#		username = message.from_user.username
#		await new_user(message.from_user.id, username, 0, message.date)
	uid = message.from_user.id
	if message.chat.id == message.from_user.id:
		await bot.send_message(-1001322323027, f'[{message.date}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {uid} –æ—Ç–ø—Ä–∞–≤–∏–ª: {message.text}')
		us = sql.select_data(message.from_user.id, 'id')[0]
		if us[11] == 1:
		   return
		if us[2] == '0' or us[2] != message.from_user.username:
			sql.edit_data('id', message.from_user.id, 'name', message.from_user.username)
			return
		CHAT_LIST = [-1001424856456, -1001342223740, -1001182837702, -1001214551467]
		suka = [(await bot.get_chat_member(i, uid)).status for i in CHAT_LIST]
		if "left" in suka:
			sub = InlineKeyboardButton('–ù–æ–≤–æ—Å—Ç–∏', url='t.me/lordref_news')
			sub2 = InlineKeyboardButton('–ß–∞—Ç', url='t.me/lordref_chat')
			sub3 = InlineKeyboardButton('–í—ã–ø–ª–∞—Ç—ã', url='t.me/lordrefs')
			sub4 = InlineKeyboardButton('–°–ø–æ–Ω—Å–æ—Ä', url='t.me/lordpromo')
			sub_kb = InlineKeyboardMarkup().add(sub, sub2, sub3, sub4)
			await message.answer('‚ùï <b>–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã:</b>', reply_markup=sub_kb)
		if message.text == '–ü—Ä–æ—Ñ–∏–ª—å ‚úù':
			withdr = InlineKeyboardButton(text="üí∞ –í—ã–≤–µ—Å—Ç–∏", callback_data="withdraw")
			withdr_kb = (types.InlineKeyboardMarkup().add(withdr))
			texts = f"üìù –ò–º—è: <b>{0}</b>\nüÜî <b>ID:</b> <code>{1}</code>\n\nüì≠ <b>–ù–∞ –≤—ã–≤–æ–¥:</b> {2}‚ÇΩ\n\nüó£ <b>–ü–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–æ: {3}</b> {\n\nüë• <b>–í–∞—Å –ø—Ä–∏–≤–µ–ª:</b> {4}\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nü§ë <b>–í—ã–≤–µ–¥–µ–Ω–æ:</b> {5}‚ÇΩ"
			texth = hlink('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', f'tg//user?={us[5]}')
			texts = texts.format(message.from_user.first_name, message.from_user.id, us[1], us[12], texth, us[8])
			await message.answer(texts, reply_markup=withdr_kb)
		if message.text == '–†–µ—Ñ–µ—Ä–∞–ª—ã üí∏':
			await message.answer(f'<b>üòâ –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ —Ç—ã –±—É–¥–µ—à—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–∞—à–µ–π 10-—Ç–∏ —É—Ä–æ–≤–Ω–µ–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ. \n1Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å -  0.5‚ÇΩ \n2Ô∏è‚É£–£—Ä–æ–≤–µ–Ω—å - 0.3‚ÇΩ\n3Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - 0.1‚ÇΩ\n4Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - 0.1‚ÇΩ\n5Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - 0.1‚ÇΩ\n6Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - 0.1‚ÇΩ\n7Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - 0.1‚ÇΩ\n8Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - 0.1‚ÇΩ\n9Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - 0.1‚ÇΩ\nüîü –£—Ä–æ–≤–µ–Ω—å - 0.1‚ÇΩ\n\nüîó –¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:</b> https://t.me/lordref_bot?start={message.from_user.id}')
		if message.text == '–°—Ç–∞—Ç–∞ üíπ':
			s = sql.select_data(0, 'id')[0]
			users_today = len(list_of_user)
			adm = types.InlineKeyboardButton(text="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è", url="https://t.me/lord_code")
			coder = types.InlineKeyboardButton(text="üë®‚Äçüíª –ö–æ–¥–µ—Ä", url="https://t.me/lord_code")
			topsv = types.InlineKeyboardButton(text="–¢–æ–ø –≤—ã–≤–æ–¥–æ–≤ üå≤", callback_data="topInv")
			topsr = types.InlineKeyboardButton(text="–¢–æ–ø —Ä–µ—Ñ–æ–≤–æ–¥–æ–≤ üí´", callback_data="topRef")
			stat_kb = types.InlineKeyboardMarkup(row_width=2).add(adm, coder, topsv, topsr)
			await message.answer(f'\nüìä<b> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:</b>\nüë®‚Äçüíª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ: ${users_today}\nüë®‚Äçüíª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–µ–≥–æ–¥–Ω—è: {users_today}\nüì§ –í—ã–ø–ª–∞—á–µ–Ω–æ –≤—Å–µ–≥–æ: {(s[1])}‚ÇΩ\nüïê –°—Ç–∞—Ä—Ç –±–æ—Ç–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω 15.05.2021', reply_markup=(stat_kb))
		if message.text == '–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã üí∞':
			await message.answer(f'{message.from_user.first_name} –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–æ–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ \n1Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - {us[12]}\n2Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - {us[13]}\n3Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - {us[14]}\n4Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - {us[15]}\n5Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - {us[16]}\n6Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - {us[17]}\n7Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - {us[18]}\n8Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - {us[19]}\n9Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å - {us[20]}\nüîü –£—Ä–æ–≤–µ–Ω—å - {us[21]}')
		if message.text == 'FAQ ‚ÑπÔ∏è':
			own = types.InlineKeyboardButton(text="‚úù –í–ª–∞–¥–µ–ª–µ—Ü", url="https://t.me/lord_code")
			coder = types.InlineKeyboardButton(text="üêç –ü—Ä–æ–≥–µ—Ä", url="https://t.me/lord_code")
			owc_kb = types.InlineKeyboardMarkup(row_width=2).add(own, coder)
			await message.answer(f'‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n–í–æ–ø—Ä–æ—Å: –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç—É –∏–ª–∏ –¥—Ä—É–≥—É—é —Å–∏—Å—Ç–µ–º—É –≤—ã–ø–ª–∞—Ç\n–û—Ç–≤–µ—Ç: –≤—ã–≤–æ–¥ —Ç–æ–ª—å–∫–æ –Ω–∞ ü•ùQiwi\n\n–í–æ–ø—Ä–æ—Å: –∫–∞–∫ —Ç—É—Ç –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å ?\n–û—Ç–≤–µ—Ç: –≤—ã –º–æ–∂–µ—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –∑–∞–±–∏—Ä–∞—Ç—å –±–æ–Ω—É—Å, –∞ —Ç–∞–∫–∂–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∏ –ø–æ–ª—É—á–∞—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –Ω–∏—Ö.\n\n–í–æ–ø—Ä–æ—Å: –∑–∞ —á—Ç–æ –º–æ–≥—É—Ç –∑–∞–±–∞–Ω–∏—Ç—å –º–æ–π –∞–∫–∫–∞—É–Ω—Ç ?\n–û—Ç–≤–µ—Ç: –∑–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ, –ø–æ–ø—ã—Ç–∫—É –Ω–∞–∫—Ä—É—Ç–∫–∏ –ª–µ–≤—ã—Ö –ª—é–¥–µ–π –≤ –±–æ—Ç–µ –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. –¢–∞–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã –Ω–µ –ø—Ä–æ–π–¥—É—Ç, —Ç–∞–∫ –∫–∞–∫ –ø–µ—Ä–µ–¥ –≤—ã–ø–ª–∞—Ç–æ–π, –∫–∞–∂–¥—ã–π –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é.\n\n–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ? –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ!', reply_markup=owc_kb)


if __name__ == '__main__':

    executor.start_polling(dp)